name: "jPipe Runner"
description: "GitHub Action to run justification diagrams of jpipe"
author: "Jason Lyu"

inputs:
  jd_file:
    description: "Path to the justification .jd file"
    required: true
  variable:
    description: "Define one or more variables in the format NAME:VALUE, separated by newlines"
    required: false
  library:
    description: "Specify one or more Python libraries to load, separated by newlines"
    required: false
  diagram:
    description: "Specify diagram pattern or wildcard"
    required: false
    default: "*"
  dry_run:
    description: "Perform a dry run without actually executing justifications"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install dependencies
      shell: bash
      env:
        DEBIAN_FRONTEND: "noninteractive"
      run: |
        sudo apt-get install \
          --no-install-recommends \
          --no-install-suggests -y \
          graphviz graphviz-dev
        pip install -r requirements.txt

    - name: Run jpipe-runner
      shell: bash
      run: |
        CMD="python -m jpipe_runner '${{ inputs.jd_file }}'"
        if [[ "${{ inputs.variable }}" != "" ]]; then
          while IFS= read -r line; do
            CMD+=" --variable '${line}'"
          done <<< "${{ inputs.variable }}"
        fi
        if [[ "${{ inputs.library }}" != "" ]]; then
          while IFS= read -r line; do
            CMD+=" --library '${line}'"
          done <<< "${{ inputs.library }}"
        fi
        if [[ "${{ inputs.diagram }}" != "" ]]; then
          CMD+=" --diagram '${{ inputs.diagram }}'"
        fi
        if [[ "${{ inputs.dry_run }}" == "true" ]]; then
          CMD+=" --dry-run"
        fi
        echo "Running command: $CMD"
        eval $CMD
